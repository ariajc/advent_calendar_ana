name: Build & Encrypt Advent

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout site repo (this repo)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checkout raw content (private repo)
        uses: actions/checkout@v4
        with:
          # ⬇️ CHANGE THIS to your private repo that holds the raw HTML files
          repository: ariajc/advent_raw
          ref: main
          token: ${{ secrets.RAW_REPO_TOKEN }}
          path: raw_src
          fetch-depth: 1

      - name: Show trees (debug)
        run: |
          echo "== Site repo root =="
          ls -la
          echo "== raw_src =="
          ls -la raw_src || true
          echo "== raw_src/raw_days (expected) =="
          ls -la raw_src/raw_days || true

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install StatiCrypt
        run: npm install -g staticrypt

      - name: Prepare public folder
        run: |
          set -e
          rm -rf public
          mkdir -p public/days

      - name: Encrypt HTML day pages (flat output)
        env:
          PASS: ${{ secrets.STATICRYPT_PASSWORD }}
        run: |
          set -e
          shopt -s nullglob

          # Support raw folder named either raw_days/ or raw-days/ in the private repo
          if [ -d "raw_src/raw_days" ]; then
            INPUT_DIR="raw_src/raw_days"
          else
            echo "::error::Couldn't find raw_src/raw_days from the private repo."
            exit 1
          fi

          COUNT=$(ls "$INPUT_DIR"/*.html 2>/dev/null | wc -l | tr -d ' ')
          if [ "$COUNT" = "0" ]; then
            echo "::error::No .html files found in $INPUT_DIR. Add day-01.html etc."
            exit 1
          fi

          # Encrypt each file into a flat public/days/ folder
          for f in "$INPUT_DIR"/*.html; do
            staticrypt "$f" -p "$PASS" -o "$PWD/public/days" --title "Enter Password" --short --no-popup
          done

          echo "== Encrypted output (public/days) =="
          ls -la public/days

      - name: Copy static assets (index + assets + optional CNAME)
        run: |
          set -e
          if [ ! -f index.html ]; then
            echo "::error::index.html not found at site repo root."
            exit 1
          fi
          cp -v index.html public/
          if [ -d assets ]; then
            mkdir -p public/assets
            cp -R assets/ public/assets/
          fi
          # If you use a custom domain:
          # [ -f CNAME ] && cp -v CNAME public/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
