name: Build & Encrypt Advent

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # This repo (public site: adevent_calendar_ana)
      - name: Checkout site repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Private raw repo (advent_raw) -> raw_src/
      - name: Checkout raw content (private repo)
        uses: actions/checkout@v4
        with:
          # ⬇️ Change owner if needed (org/user)
          repository: ariajc/advent_raw
          ref: main
          token: ${{ secrets.RAW_REPO_TOKEN }}
          path: raw_src
          fetch-depth: 1

      - name: Show trees (debug)
        run: |
          echo "== Repo root =="
          ls -la
          echo "== raw_src/raw_days (expected) =="
          ls -la raw_src/raw_days || true

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install StatiCrypt
        run: npm install -g staticrypt

      - name: Prepare public folder
        run: |
          set -e
          rm -rf public
          mkdir -p public/days

      - name: Encrypt HTML day pages (per-file → explicit output filenames)
        env:
          PASS: ${{ secrets.STATICRYPT_PASSWORD }}
        run: |
          set -euo pipefail
          shopt -s nullglob

          if [ -z "${PASS:-}" ]; then
            echo "::error::STATICRYPT_PASSWORD (secret) is empty or not set."
            exit 1
          fi

          echo "Using StatiCrypt at: $(command -v staticrypt || true)"
          staticrypt --version || true

          SRC_DIR="raw_src/raw_days"
          OUT_DIR="$PWD/public/days"
          mkdir -p "$OUT_DIR"

          echo "== Source HTML files =="
          ls -1 "$SRC_DIR"/*.html

          for f in "$SRC_DIR"/*.html; do
            base="$(basename "$f")"                 # e.g., day-01.html
            out="$OUT_DIR/$base"                    # e.g., public/days/day-01.html
            echo "Encrypt → $out"
            # NOTE: for single-file input, pass OUTPUT FILE as 2nd positional arg (no -o dir)
            staticrypt "$f" "$out" -p "$PASS" --title "Enter Password" --short --no-popup

            # verify the file now exists and is non-empty
            if [ ! -s "$out" ]; then
              echo "::error::StatiCrypt did not create $out (or file is empty)."
              exit 1
            fi
          done

          echo "== Encrypted output (public/days) =="
          ls -la "$OUT_DIR"

      - name: Copy static assets (index + assets + optional CNAME)
        run: |
          set -e
          if [ ! -f index.html ]; then
            echo "::error::index.html not found at repo root."
            exit 1
          fi
          cp -v index.html public/
          if [ -d assets ]; then
            mkdir -p public/assets
            cp -R assets/ public/assets/
          fi
          # Optional custom domain:
          # [ -f CNAME ] && cp -v CNAME public/

      - name: Upload Pages artifact (deploy public/)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

